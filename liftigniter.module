<?php

/**
 * @file
 * Integrates LiftIgniter in Drupal.
 */

use Drupal\Component\Render\FormattableMarkup;

/**
 * Implements hook_preprocess_html().
 *
 * Include the LiftIgniter JavaScript Snippet, library, widgets and templates.
 */
function liftigniter_preprocess_html(&$variables) {
  $config = \Drupal::config('liftigniter.settings');
  if ($config->get('enable')) {
    $renderable = [
      '#theme' => 'liftigniter_javascript_snippet',
      '#js_key' => $config->get('js_key'),
      '#custom_config' => $config->get('custom_config'),
    ];
    $rendered_snippet = \Drupal::service('renderer')->render($renderable);
    $variables['#attached']['html_head'][] = [
      [
        '#type' => 'html_tag',
        '#tag' => 'script',
        '#value' => new FormattableMarkup($rendered_snippet, []),
      ],
      'liftigniter_snippet',
    ];
    $liftigniter_settings = [
      'widgets' => [],
      'templates' => [],
    ];
    $templates = \Drupal::entityTypeManager()->getStorage('template')
      ->loadByProperties([
        'status' => TRUE,
      ]);
    if ($templates) {
      $liftigniter_settings['templates'] = array_map(function ($template) {
        return $template->toArray();
      }, $templates);
    }
    $widgets = \Drupal::entityTypeManager()->getStorage('widget')
      ->loadByProperties([
        'status' => TRUE,
      ]);
    if ($widgets) {
      $liftigniter_settings['widgets'] = array_map(function ($widget) {
        return $widget->toArray();
      }, $widgets);
    }
    $variables['#attached']['library'][] = 'liftigniter/liftigniter';
    $variables['#attached']['drupalSettings']['liftigniter'] = $liftigniter_settings;
  }
}

/**
 * Implements hook_theme().
 */
function liftigniter_theme($existing, $type, $theme, $path) {
  return [
    'liftigniter_javascript_snippet' => [
      'variables' => [
        'js_key' => NULL,
        'custom_config' => NULL,
      ],
    ],
  ];
}
